@RestControllerAdvice
@ExceptionHandler 의 흐름을 알고 싶어요!

Spring할때 배웠던 것이지만 설명이 필요함
@Autowired
@Bean - ?????
@Configuration

@RequiredArgsConstructor

RequiredArgs(final) 만 DI new UserService() ApplicationContext에 등록 해놓은 것을 넣어주는 것

@Getter → 이건 알겠다..! // 필드 get 메서드 자동 추가
@AllArgsConstructor -> 이거도..! // 필드 변수 모두 생성자로..
@Mockmvc

@WebMvcTest
—> Spring을 안띄우(new 최소한으로 한다는 것)고도 Service만 Test할 수 있습니다.
SpringBoot을 쓰면 Test가 어려워지는 구간이 발생합니다.
Service에서 Spring 종속성이 안들어가게 개발 해야 합니다.
→ DTO를 써서 직접 @Entity, Repository 등에 의존하지 않게 합니다.

@MockBean

@WithMockUser
@Builder
@OneToMany (mappedBy인가?? 양방향 매핑할 때 옵션들)


기능은 같지만 각 Layer의 구분을 위해 다른 것을 달아줍니다.
@Configuration
@Service
@Component
@controller

- Spring ApplicationContext에 해당 return Class를 등록하겠다는 표시 입니다.
- Factory 인터페이스 구현체 조립
- @Configuration Factory → UserDao
@Service → @Bean
@Component → @Bean
@Configuration →  @Bean